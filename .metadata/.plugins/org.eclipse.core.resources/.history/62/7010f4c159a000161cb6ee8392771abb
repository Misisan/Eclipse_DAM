package inicio;

import java.io.Closeable;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.Scanner;

public class aad_01g {

	public static void main(String[] args) {
		
		//Definición e inicialización de variables
		libro lib = new libro();
		Scanner lectorTecla = new Scanner(System.in);
		int tecla=99;
		
		//Entramos en el menú
		while (tecla!=0){
			System.out.println("1: Para guardar"+"\n"+"2: Para recuperar"+"\n"+"0: Para salir");
			
			//Evitamos errores por no itroducir integers
			try{
				tecla=Integer.valueOf(lectorTecla.next());
			}catch(Exception e){
				tecla=99;
			}
			
			//Analizamos la respuesta
			switch(tecla){
				case 0:
					System.out.println("Hasta luego.");
					break;
				case 1:
					try{
						System.out.println("Has elegido guardar."+"\n"+"Dime los datos del libro:");
						System.out.println("Dime el título:");
						String titulo = lectorTecla.next();
						System.out.println("Dime el autor:");
						String autor = lectorTecla.next();
						System.out.println("Dime el año de publicación:");
						int anyo = Integer.valueOf(lectorTecla.next());
						System.out.println("Dime el editor:");
						String editor = lectorTecla.next();
						System.out.println("Dime el año de publicación:");
						int numPag = Integer.valueOf(lectorTecla.next());
						
						//Guardamos los datos en el objeto
						lib.crearLibro(titulo, autor, anyo, editor, numPag);
						lib.print();
					}catch (Exception e){
						System.out.println("Has introducido algún dato de forma incorrecta.");
					}
					
					break;
				case 2:
					break;	
				default:
					System.out.println("No has seleccionado una opción correcta");
			}
		}
		

	}
	
	public void guardar (libro lib, String f){
		
		//Creamos un objeto ObjectOutputStream para poder guardar en un archivo propio
		//Debemos crearlo fuera del try-catch para poder utilizarlo en el finally
		ObjectOutputStream guardar = null;
		
		try {
			guardar = new ObjectOutputStream (new FileOutputStream(f));
			//Guardamos el objeto LIBRO dentro del objeto-archivo propio
			guardar.writeObject(lib);
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			//Pase lo que pase cerramos el objeto
			cerrarObjeto(guardar);
		}
		
		
	}
	
	public libro recuperar (String f){
		
		//Creamos el objeto LIBRO para almacenar en él el archivo recuperado
		libro lib = null;
		//Creamos el objeto para poder recuperar/leer del archivo
		ObjectInputStream recuperar = null;
		
		try {
			//Le decimos el archivo de donde recuperarlo
			recuperar = new ObjectInputStream (new FileInputStream(f));
			//Leemos del recuperado y lo guardamos en un objeto LIBRO
			lib = (libro) recuperar.readObject();
		} catch (IOException e) {
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}
		
		return lib;
		
	}
	
	public void cerrarObjeto (Closeable obj){
		
		//Si el objeto existe se cierra sino no hace nada
		try {
			if(obj != null){
				obj.close();
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	}
	
}
